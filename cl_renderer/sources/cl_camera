typedef struct 		s_camera
{
	FLOAT4			position;
	FLOAT4			axis_x;
	FLOAT4			axis_y;
	FLOAT4			axis_z;
	FLOAT4			forward;
	int				width;
	int				height;
}					t_camera;

static t_ray		camera_build_ray(constant t_camera *camera, int2 *screen)
{
	t_ray			result;
	FLOAT4			up;
	FLOAT4			right;
	FLOAT 			xf;
	FLOAT 			yf;

	xf = (FLOAT)screen->x;
	yf = (FLOAT)screen->y;
	result.origin = camera->position;
	up = (FLOAT4)camera->axis_y;
	right = (FLOAT4)camera->axis_x;
	right *= (FLOAT)(xf - (camera->width - 1.) / 2.);
	up *= (FLOAT)(-1. * yf + (camera->height - 1.) / 2.);
	result.direction = up + right;
	result.direction += camera->forward;
	result.direction = normalize(result.direction);
	return (result);
}