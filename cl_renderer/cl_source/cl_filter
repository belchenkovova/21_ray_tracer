// cl_filter ///////////////////////////////////////////////////////////////////////////////////////////////////////////

static RT_F4		filter_stereoscopy(RT_F4 *radiance, int *filter_stereo)
{
	if (*filter_stereo == 1)
	{
		*filter_stereo = 2;
		return ((RT_F4){0., radiance->y, radiance->z, 0.});
	}
	else
		return ((RT_F4){radiance->x, 0., 0., 0.});

}

static void			filter_jitter(RT_F *x, global ulong *rng_state)
{
	RT_F			dx;

	dx = 2. * rng(rng_state);
	if (dx < 1.)
    	dx = RT_SQRT(dx) - 1;
    else
    	dx = 1. - RT_SQRT((RT_F)2. - dx);
    *x += dx;
}
