// cl_filter ///////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef enum		e_cl_stereo_type
{
	cl_stereo_type_a,
	cl_stereo_type_b
}					t_cl_stereo_type;

static RT_F4		filter_stereo(RT_F4 radiance, t_cl_stereo_type type)
{
	if (type == cl_stereo_type_a)
		return ((RT_F4){0., radiance.y, radiance.z, 1.});
	else if (type == cl_stereo_type_b)
		return ((RT_F4){radiance.x, 0., 0., 1.});
	return ((RT_F4)0);
}

static void			filter_jitter(RT_F *x, global ulong *rng_state)
{
	RT_F			dx;

	dx = 2. * rng(rng_state);
	if (dx < 1.)
    	dx = RT_SQRT(dx) - 1;
    else
    	dx = 1. - RT_SQRT((RT_F)2. - dx);
    *x += dx;
}
