// cl_f4 ///////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "rt_float.h"

static RT_F			f4_min_component(RT_F4 vector)
{
	return (fmin(vector.x, fmin(vector.y, vector.z)));
}

static RT_F			f4_max_component(RT_F4 vector)
{
	return (fmax(vector.x, fmax(vector.y, vector.z)));
}

static RT_F4		f4_square(RT_F4 vector)
{
	return ((RT_F4)(
		vector.x * vector.x
		- vector.y * vector.y
		- vector.z * vector.z
		- vector.w * vector.w,
		2 * vector.x * vector.y,
		2 * vector.x * vector.z,
		2 * vector.x * vector.w));
}

static RT_F4		f4_mod(const RT_F4 *vector, RT_F value)
{
	RT_F4			result;

	result.x = RT_MOD(vector->x, value);
	result.y = RT_MOD(vector->y, value);
	result.z = RT_MOD(vector->z, value);
	return (result);
}

static RT_F4		f4_pow(RT_F4 vector, RT_F power)
{
	return ((RT_F4){
		RT_POW(vector.x, power),
		RT_POW(vector.y, power),
		RT_POW(vector.z, power),
		0.});
}
