// cl_rm_csg ///////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct 		        s_object_csg
{
    int     		        id_positive;
    int     		        id_negative;
}					        t_object_csg;

static	RT_F		        csg_sdf_difference(const RT_F distance_a, const RT_F distance_b)
{
	return (RT_MAX(distance_a, -distance_b));
}

static RT_F			        sdf_csg_compute(global t_object *object, t_intersection *intersection)
{
	if (object->type == object_type_sphere)
		return (object_sphere_sdf(object, intersection));
	else if (object->type == object_type_box)
        return (object_box_sdf(object, intersection));
    return (RT_INFINITY);
}

static RT_F 		       object_csg_sdf(global t_object *object, t_intersection *intersection)
{
	global t_object_csg		*data;
	global t_object       	*scene_begin;
	RT_F					sdf[2];

    data = (global t_object_csg *)object->data;
    if (object->id < 2)
    		return (RT_INFINITY);
    scene_begin = object - object->id;
    sdf[0] = sdf_csg_compute(scene_begin + data->id_positive, intersection);
    sdf[1] = sdf_csg_compute(scene_begin + data->id_negative, intersection);

    return (csg_sdf_difference(sdf[0], sdf[1]));
}
